{"version":3,"sources":["layout/SideBar.js","widgets/widget.js","views/routes.js","views/dashboard.js","views/biography.js","layout/TopNav.js","layout/Base.js","layout/Auth.js","App.js","index.js"],"names":["SideBar","props","sidebar","React","createRef","id","className","ref","Nav","routes","map","prop","key","routeName","path","location","pathname","indexOf","pro","NavLink","href","layout","icon","name","WidgetOne","Card","CardHeader","Container","fluid","CardBody","component","Row","Col","md","lg","TopNav","Navbar","NavbarBrand","window","getLocation","BaseLayout","mainPanel","currentUser","to","AuthLayout","library","add","fab","faAngleLeft","faAngleRight","faBan","faCaretDown","faCaretSquareDown","faCheck","faCheckCircle","faCheckSquare","faCog","faCogs","faFilePdf","faMailBulk","faMoneyBillWave","faPaperPlane","faPencilAlt","faSearch","faSlash","faTachometerAlt","faThumbsDown","faThumbsUp","faTrash","faTrashAlt","faUndo","faUser","faUsersCog","faUserSlash","faUserTie","faCoffee","App","render","Base","Auth","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c13e8d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Nav,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst SideBar = (props) => {\r\n  function activeRoute(routeName) {\r\n    return props.location && props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  var sidebar = React.createRef();\r\n  return (\r\n    <div id=\"sidebar\" className=\"sidebar\">\r\n      <div className=\"header\">\r\n        <p>Choose an option:</p>\r\n      </div>\r\n\r\n      <div className=\"sidebar-wrapper\" ref={sidebar}>\r\n        <Nav className=\"fa-ul\" >\r\n          {props.routes.map((prop, key) => {\r\n            return (\r\n              <li\r\n                className={\r\n                  activeRoute(prop.path) +\r\n                  (prop.pro ? \" active-pro\" : \"\")\r\n                }\r\n                key={key}\r\n              >\r\n                <NavLink\r\n                  href={prop.layout + prop.path}\r\n                >\r\n                  <span className=\"fa-li\"><FontAwesomeIcon icon={prop.icon} /></span>\r\n                  <p>{prop.name}</p>\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideBar;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Container\r\n} from \"reactstrap\";\r\n\r\nconst WidgetOne = (props) => {\r\n  return (\r\n    <Card className=\"widget granite smaller-font\">\r\n      <CardHeader>\r\n        <Container fluid>\r\n          <h2>Widget</h2>\r\n        </Container>\r\n      </CardHeader>\r\n      <CardBody className=\"no-padding\" >\r\n        {/* <ResponsiveContainer width={470} height=\"100%\">\r\n          <BarChart data={practiceMonthlyRevenueStats}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey={`${previousYear}`} className=\"series1\" />\r\n            <Bar dataKey={`${currentYear}`} className=\"series2\" />\r\n          </BarChart>\r\n        </ResponsiveContainer> */}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default WidgetOne;\r\n\r\n","import Dashboard from \"./dashboard\";\r\nimport Biography from \"./biography\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon: \"tachometer-alt\",\r\n    component: Dashboard,\r\n    layout: \"/terminal\"\r\n  },\r\n  {\r\n    path: \"/biography\",\r\n    name: \"Biography\",\r\n    icon: \"user\",\r\n    component: Biography,\r\n    layout: \"/terminal\"\r\n  }\r\n];\r\n\r\nexport default routes;\r\n\r\n","import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport WidgetOne from \"../widgets/widget\";\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <div id=\"dashboard\" className=\"content\" >\r\n      <div className=\"view\">\r\n        <Row>\r\n          <Col md=\"12\" lg=\"12\">\r\n            <WidgetOne />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n","import React from \"react\";\r\n\r\nconst Biography = (props) => {\r\n  return (\r\n    <div id=\"biography\" className=\"content\" >\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Biography;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Container, \r\n  Navbar,\r\n  NavbarBrand\r\n} from \"reactstrap\";\r\nimport routes from \"../views/routes\";\r\n\r\nconst TopNav = (props) => {\r\n\r\n  function getLocation() {\r\n    let location = \"Profile\";\r\n    routes.map((prop, key) => {\r\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n        location = prop.name;\r\n      }\r\n      return null;\r\n    });\r\n    return location;\r\n  }\r\n\r\n  return (\r\n    <Navbar>\r\n        <Container fluid>\r\n        <div className=\"spacer\"></div>\r\n        <div className=\"content\">\r\n          <NavbarBrand>\r\n            {getLocation()}\r\n          </NavbarBrand>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNav;\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport SideBar from \"./SideBar\";\r\nimport TopNav from \"./TopNav\";\r\nimport routes from \"../views/routes\";\r\n\r\nconst BaseLayout = (props) => {\r\n  var mainPanel = React.createRef();\r\n  if (!props.currentUser) return <Redirect to=\"/auth\" />\r\n  return (\r\n    <div className=\"wrapper\" >\r\n      <SideBar {...props} routes={routes} />\r\n      <div className=\"main-panel\" ref={mainPanel}>\r\n        <TopNav {...props} />\r\n        <div id=\"baseContainer\" >\r\n          <Switch>\r\n            {routes.map((prop, key) => {\r\n              return (\r\n                <Route\r\n                  path={prop.layout + prop.path}\r\n                  component={prop.component}\r\n                  key={key}\r\n                />\r\n              );\r\n            })}\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BaseLayout;\r\n\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AuthLayout = (props) => {\r\n  if (props.currentUser) return <Redirect to=\"/\" />\r\n  return (\r\n    <div>\r\n      <h1>Authorisation layout</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthLayout;\r\n\r\n","import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./assets/scss/main.scss\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport BaseLayout from \"./layout/Base\";\r\nimport AuthLayout from \"./layout/Auth\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faBan,\r\n  faCaretDown,\r\n  faCaretSquareDown,\r\n  faCheck,\r\n  faCheckCircle,\r\n  faCheckSquare,\r\n  faCog,\r\n  faCogs,\r\n  faFilePdf,\r\n  faMailBulk,\r\n  faMoneyBillWave,\r\n  faPaperPlane,\r\n  faPencilAlt,\r\n  faSearch,\r\n  faSlash,\r\n  faTachometerAlt,\r\n  faThumbsDown,\r\n  faThumbsUp,\r\n  faTrash,\r\n  faTrashAlt,\r\n  faUndo,\r\n  faUser,\r\n  faUsersCog,\r\n  faUserSlash,\r\n  faUserTie,\r\n\r\n  faCoffee\r\n} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(\r\n  fab, \r\n\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faBan,\r\n  faCaretDown,\r\n  faCaretSquareDown,\r\n  faCheck,\r\n  faCheckCircle,\r\n  faCheckSquare,\r\n  faCog,\r\n  faCogs,\r\n  faFilePdf,\r\n  faMailBulk,\r\n  faMoneyBillWave,\r\n  faPaperPlane,\r\n  faPencilAlt,\r\n  faSearch,\r\n  faSlash,\r\n  faTachometerAlt,\r\n  faThumbsDown,\r\n  faThumbsUp,\r\n  faTrash,\r\n  faTrashAlt,\r\n  faUndo,\r\n  faUser,\r\n  faUsersCog,\r\n  faUserSlash,\r\n  faUserTie,\r\n\r\n  faCoffee\r\n);\r\n\r\nfunction App() {\r\n  let currentUser = {};\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/terminal\" render={props => <BaseLayout currentUser={currentUser} {...props} />} />\r\n          <Route path=\"/auth\" render={props => <AuthLayout currentUser={currentUser} {...props} />} />\r\n          {currentUser ? <Redirect to=\"/terminal/dashboard\" /> : <Redirect to=\"/uath\" />}\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}